buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven { url 'http://repo.spring.io/plugins-release' }
    }

    dependencies {
        classpath("org.springframework.build.gradle:propdeps-plugin:$propdepsPluginVersion")
    }
}

apply plugin: 'java'
apply plugin: 'propdeps'

repositories {
    jcenter()
    
    // If `mavenLocal()` is placed before `jcenter()`,
    // you can see the source code for libraries in IntelliJ.
    // Why?
    mavenLocal()
}

dependencies {
    compile("org.bouncycastle:bcprov-jdk15on:$bouncyCastleProviderVersion")
    compile("commons-io:commons-io:$commonsIoVersion")
    compile("com.google.guava:guava:$guavaVersion")
    compile("org.apache.httpcomponents:httpclient:$httpClientVersion")
    compile("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")
    compile("org.jsoup:jsoup:$jsoupVersion")
    compile("ch.qos.logback:logback-classic:$logbackVersion")
    compile("org.apache.kafka:kafka-clients:${kafkaClientVersion}")

    provided("org.projectlombok:lombok:$lombokVersion")
    
    testCompile("org.assertj:assertj-core:$assertJVersion")
    testCompile("junit:junit:$jUnitVersion")
    
    // NOTE: Why does `mockito-all` include `org.hamcrest.Matcher`?
    // This leads to `java.lang.NoSuchMethodError: org.hamcrest.Matcher.describeMismatch(Ljava/lang/Object;Lorg/hamcrest/Description;)V`.
//    testCompile("org.mockito:mockito-all:${mockitoVersion}")
    testCompile("org.mockito:mockito-core:${mockitoVersion}")
}
