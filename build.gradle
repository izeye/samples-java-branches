buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven { url 'http://repo.spring.io/plugins-release' }
    }

    dependencies {
        classpath("org.springframework.build.gradle:propdeps-plugin:$propdepsPluginVersion")
    }
}

apply plugin: 'java'
apply plugin: 'propdeps'

sourceCompatibility = 1.8

repositories {
    jcenter()

    // If `mavenLocal()` is placed before `jcenter()`,
    // you can see the source code for libraries in IntelliJ.
    // Why?
    mavenLocal()
}

dependencies {
    compile("com.google.guava:guava:$guavaVersion")
    compile("org.apache.httpcomponents:httpclient:$httpClientVersion")
    compile("commons-io:commons-io:$commonsIoVersion")
    compile("org.bouncycastle:bcprov-jdk15on:$bouncyCastleProviderVersion")
    compile("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")
    compile("com.fasterxml.jackson.dataformat:jackson-dataformat-xml:$jacksonVersion")
    compile("org.jsoup:jsoup:$jsoupVersion")
    compile("ch.qos.logback:logback-classic:$logbackVersion")
    compile("org.apache.kafka:kafka-clients:${kafkaClientVersion}")
    compile("org.elasticsearch:elasticsearch:${elasticsearchVersion}")
    compile("org.hibernate:hibernate-validator:${hibernateValidatorVersion}")
    compile("org.glassfish:javax.el:${elVersion}")
    compile("com.github.javaparser:javaparser-core:${javaParserVersion}")
    compile("io.netty:netty-all:${nettyVersion}")
    compile("org.objenesis:objenesis:${objenesisVersion}")

    provided("org.projectlombok:lombok:$lombokVersion")

    testCompile("com.jayway.jsonpath:json-path:${jsonPathVersion}")
    testCompile("org.assertj:assertj-core:$assertJVersion")
    testCompile("junit:junit:$jUnitVersion")

    // NOTE: Why does `mockito-all` include `org.hamcrest.Matcher`?
    // This leads to `java.lang.NoSuchMethodError: org.hamcrest.Matcher.describeMismatch(Ljava/lang/Object;Lorg/hamcrest/Description;)V`.
//    testCompile("org.mockito:mockito-all:${mockitoVersion}")
    testCompile("org.mockito:mockito-core:${mockitoVersion}")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.14.1'
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ['-Xlint:unchecked', '-parameters']
}
